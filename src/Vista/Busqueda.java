/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.DAO.EscritorDAOImpl;
import Controlador.DAO.GeneroDAOImpl;
import Controlador.DAO.GrupoEditorialDAOImpl;
import Controlador.DAO.SelloEditorialDAOImpl;
import Controlador.TxtMayusculas;
import Modelo.Escritor;
import Modelo.Genero;
import Modelo.GrupoEditorial;
import Modelo.SelloEditorial;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Matias
 */
public class Busqueda extends javax.swing.JDialog {
    
    /**
     * Creates new form Busqueda
     */
    public Busqueda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        busqueda();
        TxtMayusculas.soloMayus(jTxt_Filtrar);
        
        
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPan_General = new javax.swing.JPanel();
        jLbl_Titulo = new javax.swing.JLabel();
        jBtn_Volver = new javax.swing.JButton();
        jPan_Busqueda = new javax.swing.JPanel();
        jLbl_Filtrar = new javax.swing.JLabel();
        jTxt_Filtrar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTbl_Resultados = new javax.swing.JTable();
        jBtn_Seleccionar = new javax.swing.JButton();
        jLblSeleccionado = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(650, 600));
        setMinimumSize(new java.awt.Dimension(650, 600));
        setUndecorated(true);
        setResizable(false);

        jPan_General.setBackground(new java.awt.Color(204, 255, 204));

        jLbl_Titulo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLbl_Titulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLbl_Titulo.setText("jLabel1");

        jBtn_Volver.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jBtn_Volver.setText("Volver");
        jBtn_Volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_VolverActionPerformed(evt);
            }
        });

        jLbl_Filtrar.setText("Filtrar por nombre:");

        jTxt_Filtrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxt_FiltrarActionPerformed(evt);
            }
        });
        jTxt_Filtrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTxt_FiltrarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTxt_FiltrarKeyTyped(evt);
            }
        });

        jTbl_Resultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTbl_Resultados.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        jTbl_Resultados.setPreferredSize(new java.awt.Dimension(500, 218888));
        jTbl_Resultados.getTableHeader().setResizingAllowed(false);
        jTbl_Resultados.getTableHeader().setReorderingAllowed(false);
        jTbl_Resultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTbl_ResultadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTbl_Resultados);

        javax.swing.GroupLayout jPan_BusquedaLayout = new javax.swing.GroupLayout(jPan_Busqueda);
        jPan_Busqueda.setLayout(jPan_BusquedaLayout);
        jPan_BusquedaLayout.setHorizontalGroup(
            jPan_BusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPan_BusquedaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPan_BusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPan_BusquedaLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLbl_Filtrar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxt_Filtrar, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPan_BusquedaLayout.setVerticalGroup(
            jPan_BusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPan_BusquedaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPan_BusquedaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxt_Filtrar, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(jLbl_Filtrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBtn_Seleccionar.setText("Seleccionar");
        jBtn_Seleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_SeleccionarActionPerformed(evt);
            }
        });

        jLblSeleccionado.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLblSeleccionado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblSeleccionado.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPan_GeneralLayout = new javax.swing.GroupLayout(jPan_General);
        jPan_General.setLayout(jPan_GeneralLayout);
        jPan_GeneralLayout.setHorizontalGroup(
            jPan_GeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPan_GeneralLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPan_GeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPan_GeneralLayout.createSequentialGroup()
                        .addGroup(jPan_GeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLbl_Titulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPan_Busqueda, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPan_GeneralLayout.createSequentialGroup()
                                .addComponent(jBtn_Volver)
                                .addGap(27, 27, 27)))
                        .addGap(45, 45, 45))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPan_GeneralLayout.createSequentialGroup()
                        .addComponent(jBtn_Seleccionar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPan_GeneralLayout.createSequentialGroup()
                        .addComponent(jLblSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(67, 67, 67))))
        );
        jPan_GeneralLayout.setVerticalGroup(
            jPan_GeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPan_GeneralLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jBtn_Volver)
                .addGap(18, 18, 18)
                .addComponent(jLbl_Titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPan_Busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLblSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jBtn_Seleccionar)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPan_General, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPan_General, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_VolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_VolverActionPerformed
        this.dispose();
    }//GEN-LAST:event_jBtn_VolverActionPerformed

    private void jTbl_ResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTbl_ResultadosMouseClicked
        switch(Controlador.GestionLibreria.busqueda){
            case 1: {
                int columna = jTbl_Resultados.getSelectedRow();
                String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                int idSeleccionado = Integer.parseInt(seleccionado);
                GrupoEditorial grupoSeleccioando = (GrupoEditorial) new GrupoEditorialDAOImpl().cargarPorId(idSeleccionado);
                jLblSeleccionado.setText(grupoSeleccioando.getNombre());
                break;
            }
            case 2:{
                int columna = jTbl_Resultados.getSelectedRow();
                String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                int idSeleccionado = Integer.parseInt(seleccionado);
                Genero generoSeleccionado = (Genero) new GeneroDAOImpl().cargarPorId(idSeleccionado);
                jLblSeleccionado.setText(generoSeleccionado.getNombre());
                break;
            }
            case 3 :{
                int columna = jTbl_Resultados.getSelectedRow();
                String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                int idSeleccionado = Integer.parseInt(seleccionado);
                Escritor escritorSeleccionado = (Escritor) new EscritorDAOImpl().cargarPorId(idSeleccionado);
                jLblSeleccionado.setText(escritorSeleccionado.getNombres()+" "+escritorSeleccionado.getApellidos());
                break;
            }
            case 4 :{
                int columna = jTbl_Resultados.getSelectedRow();
                String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                int idSeleccionado = Integer.parseInt(seleccionado);
                SelloEditorial selloSeleccionado = (SelloEditorial) new SelloEditorialDAOImpl().cargarPorId(idSeleccionado);
                GrupoEditorial grupo = (GrupoEditorial) new GrupoEditorialDAOImpl().cargarPorId(selloSeleccionado.getGrupo().getId());
                jLblSeleccionado.setText(selloSeleccionado.getNombre()+"  -  "+grupo.getNombre());
                break;
            
            }
        }
    }//GEN-LAST:event_jTbl_ResultadosMouseClicked

    private void jTxt_FiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxt_FiltrarActionPerformed
        
    }//GEN-LAST:event_jTxt_FiltrarActionPerformed

    private void jTxt_FiltrarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxt_FiltrarKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            busquedaFiltrada();
        }
        
    }//GEN-LAST:event_jTxt_FiltrarKeyTyped

    private void jTxt_FiltrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxt_FiltrarKeyPressed
        
        if (evt.getKeyCode()== KeyEvent.VK_BACK_SPACE || evt.getKeyCode()==KeyEvent.VK_ENTER) {
         busquedaFiltrada();
        }
        
    }//GEN-LAST:event_jTxt_FiltrarKeyPressed

    private void jBtn_SeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_SeleccionarActionPerformed
        switch (Controlador.GestionLibreria.busqueda){
            case 1: {
                if (!jLblSeleccionado.getText().equals("")) {
                    int columna = jTbl_Resultados.getSelectedRow();
                    String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                    int idSeleccionado = Integer.parseInt(seleccionado);
                    GrupoEditorial grupoSeleccioando = (GrupoEditorial) new GrupoEditorialDAOImpl().cargarPorId(idSeleccionado);
                    Controlador.GestionLibreria.resultadoBusqueda = grupoSeleccioando;
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione un Grupo editorial", null, JOptionPane.WARNING_MESSAGE);
                }
                break;
            }
            case 2:{
                if (!jLblSeleccionado.getText().equals("")) {
                    int columna = jTbl_Resultados.getSelectedRow();
                    String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                    int idSeleccionado = Integer.parseInt(seleccionado);
                    Genero generoSeleccioando = (Genero) new GeneroDAOImpl().cargarPorId(idSeleccionado);
                    Controlador.GestionLibreria.resultadoBusqueda = generoSeleccioando;
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione un Genero", null, JOptionPane.WARNING_MESSAGE);
                }
                break;
            }
            case 3:{
                if (!jLblSeleccionado.getText().equals("")) {
                    int columna = jTbl_Resultados.getSelectedRow();
                    String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                    int idSeleccionado = Integer.parseInt(seleccionado);                    
                    Escritor escritorSeleccioando = (Escritor) new EscritorDAOImpl().cargarPorId(idSeleccionado);                    
                    Controlador.GestionLibreria.resultadoBusqueda = escritorSeleccioando;
                    this.dispose();
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione un Escritor", null, JOptionPane.WARNING_MESSAGE);
                }
                break;
            }
            case 4 :{
                if (!jLblSeleccionado.getText().equals("")) {
                    int columna = jTbl_Resultados.getSelectedRow();
                    String seleccionado = jTbl_Resultados.getValueAt(columna, 0).toString();
                    int idSeleccionado = Integer.parseInt(seleccionado);
                    SelloEditorial selloSeleccionado = (SelloEditorial) new SelloEditorialDAOImpl().cargarPorId(idSeleccionado);
                    Controlador.GestionLibreria.resultadoBusqueda = selloSeleccionado;
                    this.dispose();                    
                } else {
                    JOptionPane.showMessageDialog(null, "Seleccione un Escritor", null, JOptionPane.WARNING_MESSAGE);
                }
                break;
            
            }
            
            
        }
        
              
    }//GEN-LAST:event_jBtn_SeleccionarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Busqueda dialog = new Busqueda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_Seleccionar;
    private javax.swing.JButton jBtn_Volver;
    private javax.swing.JLabel jLblSeleccionado;
    private javax.swing.JLabel jLbl_Filtrar;
    private javax.swing.JLabel jLbl_Titulo;
    private javax.swing.JPanel jPan_Busqueda;
    private javax.swing.JPanel jPan_General;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTbl_Resultados;
    private javax.swing.JTextField jTxt_Filtrar;
    // End of variables declaration//GEN-END:variables

    private void busqueda() {
        switch(Controlador.GestionLibreria.busqueda){
            case 1:{
                
                jLbl_Titulo.setText("Selecciona el Grupo Editorial - Distribuidor");
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Nombre", "% Descuento"}) {
                    boolean[] canEdit = new boolean[]{false, false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                
                ArrayList<GrupoEditorial> lista= new GrupoEditorialDAOImpl().listarTodos();
                for (GrupoEditorial aux : lista) {
                    tabla.addRow(new String [] {String.valueOf(aux.getId()),aux.getNombre(),String.valueOf(aux.getDescuento())});
                }
                
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla); 
                
                 int [] anchos = new int[] {50,350,100};
                for (int i = 0; i < anchos.length; i++) {                    
                    jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }
                jTbl_Resultados.setSize(500, 20*lista.size());
                
                break;
            }
            
            ///////////////////
            case 2:{
                jLbl_Titulo.setText("Selecciona el Genero");
                
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Nombre"}) {
                    boolean[] canEdit = new boolean[]{false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                
                ArrayList<Genero> lista = new GeneroDAOImpl().listarTodos();
                for (Genero aux : lista) {
                    tabla.addRow(new String []{String.valueOf(aux.getId()),aux.getNombre()});
                }
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla);
                
                int [] anchos = new int[] {50,450};
                for (int i = 0; i < anchos.length; i++) {                    
                    jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }                
                
                break;
            }
            
            //////
            case 3:{
                jLbl_Titulo.setText("Selecciona el Autor");
                
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Escritor"}) {
                    boolean[] canEdit = new boolean[]{false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                ArrayList<Escritor> lista = new EscritorDAOImpl().listarTodos();
                for (Escritor aux : lista) {
                    tabla.addRow(new String []{String.valueOf(aux.getId()),aux.getApellidos()+", "+aux.getNombres()});
                }
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla);
                
                int [] anchos = new int[] {50,450};
                for (int i = 0; i < anchos.length; i++) {                    
                    jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }                
                
                break;
            }
            case 4:{
                jLbl_Titulo.setText("Selecciona el Sello Editorial");
                
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Sello Editorial", "Grupo"}) {
                    boolean[] canEdit = new boolean[]{false, false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                
                ArrayList<SelloEditorial> lista = new SelloEditorialDAOImpl().listarTodos();
                for (SelloEditorial aux : lista) {
                    GrupoEditorial grupo = (GrupoEditorial) new GrupoEditorialDAOImpl().cargarPorId(aux.getGrupo().getId());
                    tabla.addRow(new String []{String.valueOf(aux.getId()),aux.getNombre(),grupo.getNombre()});
                }
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla);
                
                int [] anchos = new int[] {50,250,200};
                for (int i = 0; i < anchos.length; i++) {                    
                    jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }                
                
                break;
            }
        }
    }
    
    private void busquedaFiltrada(){
        jLblSeleccionado.setText("");
        
        switch(Controlador.GestionLibreria.busqueda){
            case 1:{                
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Nombre", "% Descuento"}) {
                    boolean[] canEdit = new boolean[]{false, false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                
              

                ArrayList<GrupoEditorial> lista = new GrupoEditorialDAOImpl().listarFiltradoXNombre(jTxt_Filtrar.getText());
                for (GrupoEditorial aux : lista) {
                    tabla.addRow(new String[]{String.valueOf(aux.getId()), aux.getNombre(), String.valueOf(aux.getDescuento())});
                }
                
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla);

                int[] anchos = new int[]{50, 350, 100};
                for (int i = 0; i < anchos.length; i++) {
                jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }
                
                break;
            }
            case 2:{
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Nombre"}) {
                    boolean[] canEdit = new boolean[]{false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                
                ArrayList<Genero> lista = new GeneroDAOImpl().listarFiltradoXNombre(jTxt_Filtrar.getText());
                for (Genero aux : lista) {
                    tabla.addRow(new String []{String.valueOf(aux.getId()),aux.getNombre()});
                }
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla);
                
                int [] anchos = new int[] {50,450};
                for (int i = 0; i < anchos.length; i++) {                    
                    jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }
                                
                break;
            
            }
            case 3:{
                
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Escritor"}) {
                    boolean[] canEdit = new boolean[]{false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                ArrayList<Escritor> lista = new EscritorDAOImpl().listarFiltradoXNombre(jTxt_Filtrar.getText());
                for (Escritor aux : lista) {
                    tabla.addRow(new String []{String.valueOf(aux.getId()),aux.getApellidos()+", "+aux.getNombres()});
                }
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla);
                
                int [] anchos = new int[] {50,450};
                for (int i = 0; i < anchos.length; i++) {                    
                    jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }                
                
                break;
            }
            case 4:{
                DefaultTableModel tabla = new javax.swing.table.DefaultTableModel(
                        new Object[][]{},
                        new String[]{"ID", "Sello Editorial", "Grupo"}) {
                    boolean[] canEdit = new boolean[]{false, false, false};

                    @Override
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit[columnIndex];
                    }
                };
                
                ArrayList<SelloEditorial> lista = new SelloEditorialDAOImpl().listarFiltradoXNombre(jTxt_Filtrar.getText());
                for (SelloEditorial aux : lista) {
                    GrupoEditorial grupo = (GrupoEditorial) new GrupoEditorialDAOImpl().cargarPorId(aux.getGrupo().getId());
                    tabla.addRow(new String []{String.valueOf(aux.getId()),aux.getNombre(),grupo.getNombre()});
                }
                jTbl_Resultados.setPreferredSize(new Dimension(500, lista.size()*16));
                jTbl_Resultados.setModel(tabla);
                
                int [] anchos = new int[] {50,250,200};
                for (int i = 0; i < anchos.length; i++) {                    
                    jTbl_Resultados.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }                
                
                break;
            }
        }
    }
}
